{"version":3,"sources":["components/BookingForm/BookingForm.jsx","components/BookingForm/index.js","App.js","index.js"],"names":["BookingForm","props","users","useState","setEmail","setPassword","onSubmit","values","console","log","axios","post","response","useEffect","initialValues","email","user1","name","password","validate","errors","test","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","style","display","margin","flexDirection","width","textAlign","marginBottom","type","onChange","e","target","value","onBlur","placeholder","color","disabled","backgroundColor","fontWeight","padding","App","pageProps","document","getElementById","JSON","parse","textContent","ReactDOM","hydrate"],"mappings":"6MA0HeA,EAtHK,SAACC,GAEjB,IAAQC,EAAUD,EAAVC,MAER,EAA0BC,mBAAS,IAAnC,mBAAcC,GAAd,WACA,EAAgCD,mBAAS,IAAzC,mBAAiBE,GAAjB,WAEMC,EAAQ,iDAAG,WAAOC,GAAP,wFAEbC,QAAQC,IAAI,WAAYF,GAFX,SAIUG,IAAMC,KAAK,+BAAgCJ,GAJrD,OAIPK,EAJO,OAMbJ,QAAQC,IAAIG,EAAU,YANT,2CAAH,sDA2Bd,OAZAC,qBAAU,WAEHX,EACCM,QAAQC,IAAI,gBAEZD,QAAQC,IAAI,oBAGnB,GAAE,CAACP,IAKA,cAAC,IAAD,CACIY,cAAe,CAAEC,MAAOb,GAASA,EAAMc,MAAQd,EAAMc,MAAMC,KAAO,GAAKC,SAAUhB,GAASA,EAAMc,MAAQd,EAAMc,MAAME,SAAW,IAC/HC,SAAU,SAAAZ,GACN,IAAMa,EAAS,CAAC,EAUhB,OATKb,EAAOQ,MAEAR,EAAOW,SAGd,2CAA2CG,KAAKd,EAAOQ,SAExDK,EAAOL,MAAQ,yBAJfK,EAAOF,SAAW,WAFlBE,EAAOL,MAAQ,WAQZK,CACV,EACDd,SAAQ,iDAAE,WAAOC,EAAP,uFAAiBe,cAAjB,SACAhB,EAASC,GADT,2CAAF,wDAfZ,SAmBK,gBACGA,EADH,EACGA,OACAa,EAFH,EAEGA,OACAG,EAHH,EAGGA,QACAC,EAJH,EAIGA,aACAC,EALH,EAKGA,WACAC,EANH,EAMGA,aACAC,EAPH,EAOGA,aAPH,OASG,sBAAMrB,SAAUoB,EAAhB,SACI,sBAAKE,MAAO,CAAEC,QAAS,OAAQC,OAAQ,YAAaC,cAAe,SAAUC,MAAO,OAApF,UACI,sBAAKJ,MAAO,CAAEK,UAAW,SAAUC,aAAc,QAAjD,UACI,kCACK,UACD,uBACIC,KAAK,QACLlB,KAAK,QACLmB,SAAU,SAACC,GACPjC,EAASiC,EAAEC,OAAOC,OAClBf,EAAaa,EAChB,EACDG,OAAQf,EACRc,MAAOhC,EAAOQ,MACda,MAAO,CAAEI,MAAO,SAChBS,YAAY,0BAGnBrB,EAAOL,OAASQ,EAAQR,OAAS,qBAAKa,MAAO,CAAEc,MAAO,OAArB,SAA+BtB,EAAOL,WAE5E,sBAAKa,MAAO,CAAEK,UAAW,SAAUC,aAAc,QAAjD,UACI,kCACK,aACD,uBACIC,KAAK,WACLlB,KAAK,WACLmB,SAAU,SAACC,GACPhC,EAAYgC,EAAEC,OAAOC,OACrBf,EAAaa,EAChB,EACDG,OAAQf,EACRc,MAAOhC,EAAOW,SACdU,MAAO,CAAEI,MAAO,SAChBS,YAAY,6BAGnBrB,EAAOF,UAAYK,EAAQL,UAAY,qBAAKU,MAAO,CAAEc,MAAO,OAArB,SAA+BtB,EAAOF,cAElF,qBAAKU,MAAO,CAAEK,UAAW,SAAUC,aAAc,QAAjD,SACI,wBACIC,KAAK,SACLQ,SAAUhB,EACVC,MAAO,CAAEI,MAAO,QAASY,gBAAiB,UAAWF,MAAO,OAAQG,WAAY,OAAQC,QAAS,OAHrG,0BAhDf,GA8DZ,ECtHc9C,ICaA+C,MAZf,SAAa9C,GAEX,IAAQC,EAAUD,EAAVC,MAIR,OAFAM,QAAQC,IAAIP,EAAO,OAGjB,cAAC,EAAD,CAAaA,MAAOA,GAGvB,ECTG8C,EAAY,CAAC,EACjBxC,QAAQC,IAAIwC,SAASC,eAAe,iBAAkB,aACnDD,SAASC,eAAe,mBACzBF,EAAYG,KAAKC,MAAMH,SAASC,eAAe,iBAAiBG,cAElE7C,QAAQC,IAAIuC,EAAW,aACvBM,IAASC,QAAQ,cAAC,EAAD,eAASP,IAAcC,SAASC,eAAe,Q","file":"static/js/main.dccdef54.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Formik } from 'formik'\nimport axios from 'axios'\n\nconst BookingForm = (props) => {\n\n    const { users } = props\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onSubmit = async (values) => {\n\n        console.log('onSubmit', values)\n\n        const response = await axios.post('http://localhost:3006/submit', values);\n\n        console.log(response, 'response')\n\n        // const customEvent = new CustomEvent('message', { detail: values });\n        // window.dispatchEvent(customEvent)\n\n\n\n    }\n\n    useEffect(() => {\n\n        if(users) {\n            console.log('it has users')\n        } else {\n            console.log('doesnt have users')\n        }\n\n    }, [users])\n\n    //console.log(users.user1.name, 'BOOKING FORM')\n\n    return (\n        <Formik\n            initialValues={{ email: users && users.user1 ? users.user1.name : '' , password: users && users.user1 ? users.user1.password : '' }}\n            validate={values => {\n                const errors = {}\n                if (!values.email) {\n                    errors.email = 'Required'\n                } else if (!values.password) {\n                    errors.password = 'Required'\n                } else if (\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                    errors.email = 'Invalid email address'\n                }\n                return errors;\n            }}\n            onSubmit={async (values, { setSubmitting }) => {\n                await onSubmit(values)\n            }}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n            }) => (\n                <form onSubmit={handleSubmit}>\n                    <div style={{ display: \"flex\", margin: \"30px auto\", flexDirection: \"column\", width: \"50%\" }}>\n                        <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\n                            <label>\n                                {'Email: '}\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={(e) => {\n                                        setEmail(e.target.value)\n                                        handleChange(e)\n                                    }}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                    style={{ width: '300px' }}\n                                    placeholder='Please enter email'\n                                />\n                            </label>\n                            {errors.email && touched.email && <div style={{ color: 'red' }}>{errors.email}</div>}\n                        </div>\n                        <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\n                            <label>\n                                {'Password: '}\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    onChange={(e) => {\n                                        setPassword(e.target.value)\n                                        handleChange(e)\n                                    }}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    style={{ width: '300px' }}\n                                    placeholder='Please enter password'\n                                />\n                            </label>\n                            {errors.password && touched.password && <div style={{ color: 'red' }}>{errors.password}</div>}\n                        </div>\n                        <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\n                            <button\n                                type=\"submit\"\n                                disabled={isSubmitting}\n                                style={{ width: \"200px\", backgroundColor: '#4895d0', color: '#fff', fontWeight: \"bold\", padding: '5px' }}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n        </Formik>\n    )\n\n}\n\nexport default BookingForm\n","import BookingForm from './BookingForm.jsx'\n\nexport default BookingForm","import React from 'react';\nimport { BookingForm } from './components'\n\nfunction App(props) {\n\n  const { users } = props\n\n  console.log(users, 'APP')\n\n  return (\n    <BookingForm users={users} />\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nlet pageProps = {}\nconsole.log(document.getElementById('__PAGE_DATA__'), 'PAGE DATA')\nif(document.getElementById('__PAGE_DATA__')) {\n  pageProps = JSON.parse(document.getElementById('__PAGE_DATA__').textContent)\n}\nconsole.log(pageProps, 'pageProps')\nReactDOM.hydrate(<App {...pageProps}/>, document.getElementById('root'));\n"],"sourceRoot":""}